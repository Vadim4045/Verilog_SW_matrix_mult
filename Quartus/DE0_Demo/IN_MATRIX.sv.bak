module IN_MATRIX #(parameter BITS=8, N=8, WIDTH=4, OFFCET=0)
						(input [WIDTH*BITS-1:0] in,
						input [9:0]addr,
						input rst,clk,wr_en,select,
						output reg [N*N/WIDTH-1:0] out_all [BITS*WIDTH-1:0],
						output reg [N*N/WIDTH-1:0] map,
						output stored, ready);
						


localparam addr_width = log2(N*N/WIDTH);

wire [addr_width-1:0] in_addr;
assign in_addr = (addr-OFFCET)>>2;

always @(posedge clk or negedge rst)
begin

	if(~rst) begin
	
		out_all <= 'h0;
		map <= 'h0;
		
	end else begin
		
		if(select & wr_en) begin
		
			out_all [in_addr] <= in;
			map [in_addr] <= 1'b1;
		
		end
		
	end

end
						
endmodule
